{"remainingRequest":"/home/prantho/Public/important/vue/blog_api/node_modules/babel-loader/lib/index.js!/home/prantho/Public/important/vue/blog_api/node_modules/vue-loader-v16/dist/templateLoader.js??ref--6!/home/prantho/Public/important/vue/blog_api/node_modules/cache-loader/dist/cjs.js??ref--1-0!/home/prantho/Public/important/vue/blog_api/node_modules/vue-loader-v16/dist/index.js??ref--1-1!/home/prantho/Public/important/vue/blog_api/src/views/singlepost.vue?vue&type=template&id=8bf52afc","dependencies":[{"path":"/home/prantho/Public/important/vue/blog_api/src/views/singlepost.vue","mtime":1651422799991},{"path":"/home/prantho/Public/important/vue/blog_api/babel.config.js","mtime":1644956430197},{"path":"/home/prantho/Public/important/vue/blog_api/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/prantho/Public/important/vue/blog_api/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/prantho/Public/important/vue/blog_api/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":499162500000},{"path":"/home/prantho/Public/important/vue/blog_api/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/prantho/Public/important/vue/blog_api/node_modules/vue-loader-v16/dist/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgb3BlbkJsb2NrIGFzIF9vcGVuQmxvY2ssIGNyZWF0ZUVsZW1lbnRCbG9jayBhcyBfY3JlYXRlRWxlbWVudEJsb2NrIH0gZnJvbSAidnVlIjsKZXhwb3J0IGZ1bmN0aW9uIHJlbmRlcihfY3R4LCBfY2FjaGUsICRwcm9wcywgJHNldHVwLCAkZGF0YSwgJG9wdGlvbnMpIHsKICByZXR1cm4gX29wZW5CbG9jaygpLCBfY3JlYXRlRWxlbWVudEJsb2NrKCJoMSIsIG51bGwsICJzaW5nbGUgcG9zdCIpOwp9"},{"version":3,"mappings":";;uBACEA,oBAAoB,IAApB,EAAoB,IAApB,EAAI,aAAJ","names":["_createElementBlock"],"sourceRoot":"","sources":["/home/prantho/Public/important/vue/blog_api/src/views/singlepost.vue"],"sourcesContent":["<template>\n  <h1>single post</h1>\n</template>\n\n<script>\nimport axios from \"axios\";\nexport default {\n  name: \"SinglePost\",\n  data() {\n    return {\n      id: \"\",\n      post: {\n        type: Object,\n        default:null\n      },\n      comment:{\n        type:Array,\n        default:null\n      }\n    };\n  },\n  async mounted() {\n    try {\n      let slug = this.$route.params.id;\n      const res = await axios.get(`api/post/${slug}`);\n      this.post=res.data[0]\n      this.comment=res.data[1]\n      console.log(res);\n    } catch (error) {\n      console.log(error);\n    }\n  },\n};\n</script>\n\n<style></style>\n"]}]}