{"remainingRequest":"/home/prantho/Public/important/vue/blog_api/node_modules/vue-loader-v16/dist/index.js??ref--1-1!/home/prantho/Public/important/vue/blog_api/src/views/singlepost.vue?vue&type=template&id=8bf52afc&scoped=true","dependencies":[{"path":"/home/prantho/Public/important/vue/blog_api/src/views/singlepost.vue","mtime":1651436879587},{"path":"/home/prantho/Public/important/vue/blog_api/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/prantho/Public/important/vue/blog_api/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/prantho/Public/important/vue/blog_api/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":499162500000},{"path":"/home/prantho/Public/important/vue/blog_api/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/prantho/Public/important/vue/blog_api/node_modules/vue-loader-v16/dist/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CiAgPHNlY3Rpb24gY2xhc3M9ImJhbm5lciIgc3R5bGU9ImJhY2tncm91bmQtaW1hZ2U6IHVybCgnLi4vYXNzZXRzL2RvY3Rvci5qcGcnKSI+CiAgICA8aW1nIHNyYz0iLi4vYXNzZXRzL2RvY3Rvci5qcGciIGNsYXNzPSJoLTEwMCBpbWctZmx1aWQiIGFsdD0iIiAvPgogICAgPGgxIGNsYXNzPSJ0aXRsZSI+e3sgcG9zdC50aXRsZSB9fTwvaDE+CiAgPC9zZWN0aW9uPgogIDxzZWN0aW9uIGNsYXNzPSJjb2wtbWQtMTAgbXgtYXV0byBzaW5nbGVfYmxvZ19pbm5lciBwLTMiPgogICAgPGRpdiBjbGFzcz0iY2FyZCBjb2wtbWQtNCBjb2wtMTEgZmxvYXQtZW5kIGQtYmxvY2siPgogICAgICA8ZGl2IGNsYXNzPSJjYXJkLWJvZHkgdGV4dC1jZW50ZXIiPgogICAgICAgIDxoMz5wcmFudGhvPC9oMz4KICAgICAgICA8aDY+e3sgcG9zdC5jcmVhdGVkX2F0IH19PC9oNj4KICAgICAgPC9kaXY+CiAgICA8L2Rpdj4KICAgIDxkaXYgY2xhc3M9ImRlc2NyaXB0aW9uIiB2LWh0bWw9InBvc3QuZGVzY3JpcHRpb24iPjwvZGl2PgogIDwvc2VjdGlvbj4K"},{"version":3,"sources":["/home/prantho/Public/important/vue/blog_api/src/views/singlepost.vue"],"names":[],"mappings":";EACE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAC3E,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;IAChE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACxC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACT,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IACtD,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACjD,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAChC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACf,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MAC/B,CAAC,CAAC,CAAC,CAAC,CAAC;IACP,CAAC,CAAC,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EAC1D,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC","file":"/home/prantho/Public/important/vue/blog_api/src/views/singlepost.vue","sourceRoot":"","sourcesContent":["<template>\n  <section class=\"banner\" style=\"background-image: url('../assets/doctor.jpg')\">\n    <img src=\"../assets/doctor.jpg\" class=\"h-100 img-fluid\" alt=\"\" />\n    <h1 class=\"title\">{{ post.title }}</h1>\n  </section>\n  <section class=\"col-md-10 mx-auto single_blog_inner p-3\">\n    <div class=\"card col-md-4 col-11 float-end d-block\">\n      <div class=\"card-body text-center\">\n        <h3>prantho</h3>\n        <h6>{{ post.created_at }}</h6>\n      </div>\n    </div>\n    <div class=\"description\" v-html=\"post.description\"></div>\n  </section>\n</template>\n\n<script>\nimport axios from \"axios\";\nexport default {\n  name: \"SinglePost\",\n  data() {\n    return {\n      id: \"\",\n      post: {\n        type: Object,\n        default: null,\n      },\n      comment: {\n        type: Array,\n        default: null,\n      },\n    };\n  },\n  async mounted() {\n    try {\n      let slug = this.$route.params.id;\n      const res = await axios.get(`api/post/${slug}`);\n      this.post = res.data.post;\n      this.comment = res.data.comment;\n      console.log(res);\n    } catch (error) {\n      console.log(error);\n    }\n  },\n};\n</script>\n\n<style scoped>\n.banner {\n  height: 55vh;\n  max-height: 55vh;\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  position: relative;\n}\n.banner img {\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  height: 100%;\n  width: 100%;\n  background-attachment: fixed;\n  object-fit: cover;\n  object-position: center center;\n}\n.title {\n  z-index: 999;\n  font-size: 2.5rem;\n  color: white;\n}\n</style>\n"]}]}